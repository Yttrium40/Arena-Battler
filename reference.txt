#include <SFML/Graphics.hpp>
#include "button.h"
#include "global.h"
#include <iostream>
#include "scene.h"

sf::Font globalFont;
unsigned int globalFontSize{ 16 };
sf::Vector2f globalWindowSize{ 500, 500 };
sf::Color globalWindowBackgroundColor{ 50, 50, 50, 255 };

int main()
{
    globalFont.loadFromFile("../assets/fonts/cambriab.ttf");

    sf::RenderWindow window(sf::VideoMode(globalWindowSize.x, globalWindowSize.y), "Fur and Fire");
    sf::RectangleShape windowBackground{ globalWindowSize };
    windowBackground.setFillColor(globalWindowBackgroundColor);

    sf::Texture texture;
    texture.loadFromFile("../assets/images/Nabonion.png");
    auto texture_ptr = std::make_shared<sf::Texture>(texture);

    sf::Texture otherTexture;
    otherTexture.loadFromFile("../assets/images/Ghaunadaur.png");
    auto otherTexture_ptr = std::make_shared<sf::Texture>(otherTexture);

    Button shape {sf::Vector2f(50, 50), sf::Vector2f(200, 100), "Hello there", texture_ptr, otherTexture_ptr};

    std::vector<MenuButton &> menuButtonsMenu;
    std::vector<ActionButton &> actionButtonsMenu;
    std::vector<ListButton &> listButtonsMenu;
    std::vector<sf::Text &> textMenu;

    std::vector<MenuButton &> menuButtonsExploration;
    std::vector<ActionButton &> actionButtonsExploration;
    std::vector<ListButton &> listButtonsExploration;
    std::vector<sf::Text &> textExploration;

    std::vector<MenuButton &> menuButtonsCombat;
    std::vector<ActionButton &> actionButtonsCombat;
    std::vector<ListButton &> listButtonsCombat;
    std::vector<sf::Text &> textCombat;

    Scene sceneMainMenu{ menuButtonsMenu, actionButtonsMenu, listButtonsMenu, textMenu };
    Scene sceneExploration{ menuButtonsExploration, actionButtonsExploration, listButtonsExploration, textExploration };
    Scene sceneCombat{ menuButtonsCombat, actionButtonsCombat, listButtonsCombat, textCombat };

    auto currentScene = std::make_unique<Scene>(sceneMainMenu);

    while (window.isOpen())
    {
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
                window.close();

            if ((event.type == sf::Event::MouseButtonPressed) && (event.mouseButton.button == sf::Mouse::Left))
                // for (button in scene vector)
                // if contains click
                // do button thing
                if (shape.containsClick(event))
                {
                    std::cout << "Button pressed!\n";
                    shape.makeClicked();
                }

            if ((event.type == sf::Event::MouseButtonReleased) && (event.mouseButton.button == sf::Mouse::Left))
                shape.makeNotClicked();
        }

        window.clear();
        window.draw(windowBackground);
        currentScene->draw(window);
        //if (currentScene.get() == &sceneExploration)
        //{

        //}
        //else if (currentScene.get() == &sceneCombat)
        //{

        //}
        //else if (currentScene.get() == &sceneMainMenu)
        //{

        //}

        window.display();
    }

    return 0;
}
